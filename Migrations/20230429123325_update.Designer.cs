// <auto-generated />
using System;
using Bt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bt.Migrations
{
    [DbContext(typeof(DhsMagacoursesContext))]
    [Migration("20230429123325_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bt.Models.AgeEligibilityCriterion", b =>
                {
                    b.Property<int?>("AgeLimitLower")
                        .HasColumnType("int")
                        .HasColumnName("AgeLimit_Lower");

                    b.Property<int?>("AgeLimitUpper")
                        .HasColumnType("int")
                        .HasColumnName("AgeLimit_Upper");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<int?>("SessionCode")
                        .HasColumnType("int")
                        .HasColumnName("Session_Code");

                    b.ToTable("AgeEligibilityCriteria");
                });

            modelBuilder.Entity("Bt.Models.ApplicantsAlliedCourse", b =>
                {
                    b.Property<int>("ApplicantId")
                        .HasColumnType("int")
                        .HasColumnName("Applicant_Id");

                    b.Property<int?>("AgeAsOnCutOffDate")
                        .HasColumnType("int");

                    b.Property<byte[]>("AgeProof")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AplicantName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Aplicant_Name");

                    b.Property<int?>("ApplicationStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<byte[]>("CategoryCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Category_Certificate");

                    b.Property<byte[]>("CharacterCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Character_Certificate");

                    b.Property<string>("DataEntryIp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DataEntry_IP");

                    b.Property<DateTime?>("DataEntryTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("DataEntry_Timestamp");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("EMail")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("eMail")
                        .IsFixedLength();

                    b.Property<double?>("FullmarksBiology")
                        .HasColumnType("float")
                        .HasColumnName("fullmarks_Biology");

                    b.Property<double?>("FullmarksChemistry")
                        .HasColumnType("float")
                        .HasColumnName("fullmarks_Chemistry");

                    b.Property<double?>("FullmarksMathematics")
                        .HasColumnType("float")
                        .HasColumnName("fullmarks_Mathematics");

                    b.Property<double?>("FullmarksPhysics")
                        .HasColumnType("float")
                        .HasColumnName("fullmarks_Physics");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<byte[]>("GuardianEmployerCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Guardian_EmployerCertificate");

                    b.Property<string>("GuardianName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Guardian_Name");

                    b.Property<string>("GuardianOccupation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Guardian_Occupation");

                    b.Property<string>("GuardianOfficeAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Guardian_OfficeAddress");

                    b.Property<string>("GuardianOfficeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Guardian_OfficeName");

                    b.Property<double?>("MarksBiologyPractical")
                        .HasColumnType("float")
                        .HasColumnName("marks_Biology_Practical");

                    b.Property<double?>("MarksBiologyTheory")
                        .HasColumnType("float")
                        .HasColumnName("marks_Biology_Theory");

                    b.Property<double?>("MarksChemistryPractical")
                        .HasColumnType("float")
                        .HasColumnName("marks_Chemistry_Practical");

                    b.Property<double?>("MarksChemistryTheory")
                        .HasColumnType("float")
                        .HasColumnName("marks_Chemistry_Theory");

                    b.Property<double?>("MarksMathematicsPractical")
                        .HasColumnType("float")
                        .HasColumnName("marks_Mathematics_Practical");

                    b.Property<double?>("MarksMathematicsTheory")
                        .HasColumnType("float")
                        .HasColumnName("marks_Mathematics_Theory");

                    b.Property<double?>("MarksPhysicsPractical")
                        .HasColumnType("float")
                        .HasColumnName("marks_Physics_Practical");

                    b.Property<double?>("MarksPhysicsTheory")
                        .HasColumnType("float")
                        .HasColumnName("marks_Physics_Theory");

                    b.Property<byte[]>("Marksheet")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<string>("ModifiedIp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Modified_IP");

                    b.Property<DateTime?>("ModifiedTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_Timestamp");

                    b.Property<int?>("Nationality")
                        .HasColumnType("int");

                    b.Property<byte[]>("PassportPhoto")
                        .HasColumnType("image")
                        .HasColumnName("Passport_Photo");

                    b.Property<double?>("PercentagePcbXii")
                        .HasColumnType("float")
                        .HasColumnName("Percentage_PCB_XII");

                    b.Property<double?>("PercentagePcmXii")
                        .HasColumnType("float")
                        .HasColumnName("Percentage_PCM_XII");

                    b.Property<double?>("PercentageXii")
                        .HasColumnType("float")
                        .HasColumnName("Percentage_XII");

                    b.Property<string>("PermanentAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Permanent_Address");

                    b.Property<int?>("PermanentBlock")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_Block");

                    b.Property<int?>("PermanentDistrict")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_District");

                    b.Property<int?>("PermanentState")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_State");

                    b.Property<int?>("PermanentVillage")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_Village");

                    b.Property<byte[]>("PrCetificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PR_Cetificate");

                    b.Property<string>("PresentAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Present_Address");

                    b.Property<int?>("PresentBlock")
                        .HasColumnType("int")
                        .HasColumnName("Present_Block");

                    b.Property<int?>("PresentDistrict")
                        .HasColumnType("int")
                        .HasColumnName("Present_District");

                    b.Property<int?>("PresentState")
                        .HasColumnType("int")
                        .HasColumnName("Present_State");

                    b.Property<int?>("PresentVillage")
                        .HasColumnType("int")
                        .HasColumnName("Present_Village");

                    b.Property<int?>("Religion")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ScreeningCentre")
                        .HasColumnType("int");

                    b.HasKey("ApplicantId");

                    b.ToTable("Applicants_AlliedCourses");
                });

            modelBuilder.Entity("Bt.Models.ApplicantsAnm", b =>
                {
                    b.Property<int>("ApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Applicant_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicantId"));

                    b.Property<int?>("AgeAsOnCutOffDate")
                        .HasColumnType("int");

                    b.Property<byte[]>("AgeProof")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AplicantName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Aplicant_Name");

                    b.Property<int?>("ApplicationStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<byte[]>("CategoryCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Category_Certificate");

                    b.Property<byte[]>("CharacterCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Character_Certificate");

                    b.Property<string>("DataEntryIp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DataEntry_IP");

                    b.Property<DateTime?>("DataEntryTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("DataEntry_Timestamp");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("EMail")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("eMail")
                        .IsFixedLength();

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(1)");

                    b.Property<byte[]>("GuardianEmployerCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Guardian_EmployerCertificate");

                    b.Property<string>("GuardianName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Guardian_Name");

                    b.Property<string>("GuardianOccupation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Guardian_Occupation");

                    b.Property<string>("GuardianOfficeAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Guardian_OfficeAddress");

                    b.Property<string>("GuardianOfficeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Guardian_OfficeName");

                    b.Property<byte[]>("Marksheet")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<string>("ModifiedIp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Modified_IP");

                    b.Property<DateTime?>("ModifiedTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_Timestamp");

                    b.Property<int?>("Nationality")
                        .HasColumnType("int");

                    b.Property<byte[]>("PassportPhoto")
                        .HasColumnType("image")
                        .HasColumnName("Passport_Photo");

                    b.Property<double?>("PercentageXii")
                        .HasColumnType("float")
                        .HasColumnName("Percentage_XII");

                    b.Property<string>("PermanentAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Permanent_Address");

                    b.Property<int?>("PermanentBlock")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_Block");

                    b.Property<int?>("PermanentDistrict")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_District");

                    b.Property<int?>("PermanentState")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_State");

                    b.Property<int?>("PermanentVillage")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_Village");

                    b.Property<byte[]>("PrCetificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PR_Cetificate");

                    b.Property<string>("PresentAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Present_Address");

                    b.Property<int?>("PresentBlock")
                        .HasColumnType("int")
                        .HasColumnName("Present_Block");

                    b.Property<int?>("PresentDistrict")
                        .HasColumnType("int")
                        .HasColumnName("Present_District");

                    b.Property<int?>("PresentState")
                        .HasColumnType("int")
                        .HasColumnName("Present_State");

                    b.Property<int?>("PresentVillage")
                        .HasColumnType("int")
                        .HasColumnName("Present_Village");

                    b.Property<int?>("Religion")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Stream")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("ApplicantId");

                    b.ToTable("Applicants_ANM");
                });

            modelBuilder.Entity("Bt.Models.ApplicantsGnm", b =>
                {
                    b.Property<int?>("AgeAsOnCutOffDate")
                        .HasColumnType("int");

                    b.Property<byte[]>("AgeProof")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AplicantName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Aplicant_Name");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int")
                        .HasColumnName("Applicant_Id");

                    b.Property<int?>("ApplicationStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<byte[]>("CategoryCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Category_Certificate");

                    b.Property<byte[]>("CharacterCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Character_Certificate");

                    b.Property<string>("DataEntryIp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DataEntry_IP");

                    b.Property<DateTime?>("DataEntryTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("DataEntry_Timestamp");

                    b.Property<byte[]>("DisabilityCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Disability_Certificate");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("EMail")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("eMail")
                        .IsFixedLength();

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<byte[]>("GuardianEmployerCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Guardian_EmployerCertificate");

                    b.Property<string>("GuardianName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Guardian_Name");

                    b.Property<string>("GuardianOccupation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Guardian_Occupation");

                    b.Property<string>("GuardianOfficeAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Guardian_OfficeAddress");

                    b.Property<string>("GuardianOfficeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Guardian_OfficeName");

                    b.Property<byte[]>("Marksheet")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<string>("ModifiedIp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Modified_IP");

                    b.Property<DateTime?>("ModifiedTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_Timestamp");

                    b.Property<int?>("Nationality")
                        .HasColumnType("int");

                    b.Property<byte[]>("PassportPhoto")
                        .HasColumnType("image")
                        .HasColumnName("Passport_Photo");

                    b.Property<double?>("PercentageXii")
                        .HasColumnType("float")
                        .HasColumnName("Percentage_XII");

                    b.Property<string>("PermanentAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Permanent_Address");

                    b.Property<int?>("PermanentBlock")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_Block");

                    b.Property<int?>("PermanentDistrict")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_District");

                    b.Property<int?>("PermanentState")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_State");

                    b.Property<int?>("PermanentVillage")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_Village");

                    b.Property<string>("PhysicalDisability")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<byte[]>("PrCetificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PR_Cetificate");

                    b.Property<string>("PresentAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Present_Address");

                    b.Property<int?>("PresentBlock")
                        .HasColumnType("int")
                        .HasColumnName("Present_Block");

                    b.Property<int?>("PresentDistrict")
                        .HasColumnType("int")
                        .HasColumnName("Present_District");

                    b.Property<int?>("PresentState")
                        .HasColumnType("int")
                        .HasColumnName("Present_State");

                    b.Property<int?>("PresentVillage")
                        .HasColumnType("int")
                        .HasColumnName("Present_Village");

                    b.Property<int?>("Religion")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Stream")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.ToTable("Applicants_GNM");
                });

            modelBuilder.Entity("Bt.Models.ApplicantsMbb", b =>
                {
                    b.Property<int?>("AgeAsOnCutOffDate")
                        .HasColumnType("int");

                    b.Property<byte[]>("AgeProof")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AplicantName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Aplicant_Name");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int")
                        .HasColumnName("Applicant_Id");

                    b.Property<int?>("ApplicationStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<byte[]>("CategoryCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Category_Certificate");

                    b.Property<byte[]>("CharacterCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Character_Certificate");

                    b.Property<string>("DataEntryIp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DataEntry_IP");

                    b.Property<DateTime?>("DataEntryTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("DataEntry_Timestamp");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("EMail")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("eMail")
                        .IsFixedLength();

                    b.Property<double?>("FullmarksBiology")
                        .HasColumnType("float")
                        .HasColumnName("fullmarks_Biology");

                    b.Property<double?>("FullmarksChemistry")
                        .HasColumnType("float")
                        .HasColumnName("fullmarks_Chemistry");

                    b.Property<double?>("FullmarksEnglish")
                        .HasColumnType("float")
                        .HasColumnName("fullmarks_English");

                    b.Property<double?>("FullmarksPhysics")
                        .HasColumnType("float")
                        .HasColumnName("fullmarks_Physics");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<byte[]>("GuardianEmployerCertificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Guardian_EmployerCertificate");

                    b.Property<string>("GuardianName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Guardian_Name");

                    b.Property<string>("GuardianOccupation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Guardian_Occupation");

                    b.Property<string>("GuardianOfficeAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Guardian_OfficeAddress");

                    b.Property<string>("GuardianOfficeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Guardian_OfficeName");

                    b.Property<double?>("MarksBiologyPractical")
                        .HasColumnType("float")
                        .HasColumnName("marks_Biology_Practical");

                    b.Property<double?>("MarksBiologyTheory")
                        .HasColumnType("float")
                        .HasColumnName("marks_Biology_Theory");

                    b.Property<double?>("MarksChemistryPractical")
                        .HasColumnType("float")
                        .HasColumnName("marks_Chemistry_Practical");

                    b.Property<double?>("MarksChemistryTheory")
                        .HasColumnType("float")
                        .HasColumnName("marks_Chemistry_Theory");

                    b.Property<double?>("MarksEnglishPractical")
                        .HasColumnType("float")
                        .HasColumnName("marks_English_Practical");

                    b.Property<double?>("MarksEnglishTheory")
                        .HasColumnType("float")
                        .HasColumnName("marks_English_Theory");

                    b.Property<double?>("MarksPhysicsPractical")
                        .HasColumnType("float")
                        .HasColumnName("marks_Physics_Practical");

                    b.Property<double?>("MarksPhysicsTheory")
                        .HasColumnType("float")
                        .HasColumnName("marks_Physics_Theory");

                    b.Property<byte[]>("Marksheet")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<string>("ModifiedIp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Modified_IP");

                    b.Property<DateTime?>("ModifiedTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_Timestamp");

                    b.Property<int?>("Nationality")
                        .HasColumnType("int");

                    b.Property<double?>("NeetUgCurrentScore")
                        .HasColumnType("float")
                        .HasColumnName("NEET_UG_CurrentScore");

                    b.Property<byte[]>("NeetUgScoresheet")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("NEET_UG_Scoresheet");

                    b.Property<byte[]>("PassportPhoto")
                        .HasColumnType("image")
                        .HasColumnName("Passport_Photo");

                    b.Property<double?>("PercentagePcbXii")
                        .HasColumnType("float")
                        .HasColumnName("Percentage_PCB_XII");

                    b.Property<double?>("PercentagePcbeXii")
                        .HasColumnType("float")
                        .HasColumnName("Percentage_PCBE_XII");

                    b.Property<double?>("PercentageXii")
                        .HasColumnType("float")
                        .HasColumnName("Percentage_XII");

                    b.Property<string>("PermanentAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Permanent_Address");

                    b.Property<int?>("PermanentBlock")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_Block");

                    b.Property<int?>("PermanentDistrict")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_District");

                    b.Property<int?>("PermanentState")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_State");

                    b.Property<int?>("PermanentVillage")
                        .HasColumnType("int")
                        .HasColumnName("Permanent_Village");

                    b.Property<byte[]>("PrCetificate")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PR_Cetificate");

                    b.Property<string>("PresentAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Present_Address");

                    b.Property<int?>("PresentBlock")
                        .HasColumnType("int")
                        .HasColumnName("Present_Block");

                    b.Property<int?>("PresentDistrict")
                        .HasColumnType("int")
                        .HasColumnName("Present_District");

                    b.Property<int?>("PresentState")
                        .HasColumnType("int")
                        .HasColumnName("Present_State");

                    b.Property<int?>("PresentVillage")
                        .HasColumnType("int")
                        .HasColumnName("Present_Village");

                    b.Property<int?>("Religion")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("Applicants_MBBS");
                });

            modelBuilder.Entity("Bt.Models.MApplicationStatus", b =>
                {
                    b.Property<int>("ApplicationStatus")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationStatusDesc")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("ApplicationStatus_Desc")
                        .IsFixedLength();

                    b.HasKey("ApplicationStatus");

                    b.ToTable("mApplicationStatus");
                });

            modelBuilder.Entity("Bt.Models.MApplicationType", b =>
                {
                    b.Property<string>("ApplicationDesc")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nchar(60)")
                        .HasColumnName("Application_Desc")
                        .IsFixedLength();

                    b.Property<int>("ApplicationType")
                        .HasColumnType("int");

                    b.ToTable("mApplicationType");
                });

            modelBuilder.Entity("Bt.Models.MBlock", b =>
                {
                    b.Property<int>("BlockCode")
                        .HasColumnType("int")
                        .HasColumnName("Block_Code");

                    b.Property<string>("BlockName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Block_Name");

                    b.Property<int>("DistrictCode")
                        .HasColumnType("int")
                        .HasColumnName("District_Code");

                    b.Property<int>("StateCode")
                        .HasColumnType("int")
                        .HasColumnName("State_Code");

                    b.HasKey("BlockCode");

                    b.ToTable("mBlocks");
                });

            modelBuilder.Entity("Bt.Models.MCategory", b =>
                {
                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("CategoryDesc")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Category_Desc")
                        .IsFixedLength();

                    b.ToTable("mCategory");
                });

            modelBuilder.Entity("Bt.Models.MCoursesAlliedCourse", b =>
                {
                    b.Property<int>("AcCourseCode")
                        .HasColumnType("int")
                        .HasColumnName("AC_CourseCode");

                    b.Property<string>("AcCourseName")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("AC_CourseName")
                        .IsFixedLength();

                    b.ToTable("mCourses_AlliedCourses");
                });

            modelBuilder.Entity("Bt.Models.MCoursesAnm", b =>
                {
                    b.Property<string>("AmnCourse")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("AMN_Course")
                        .IsFixedLength();

                    b.Property<int?>("AnmCourseCode")
                        .HasColumnType("int")
                        .HasColumnName("ANM_CourseCode");

                    b.ToTable("mCourses_ANM");
                });

            modelBuilder.Entity("Bt.Models.MCoursesGnm", b =>
                {
                    b.Property<string>("GmnCouse")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("GMN_Couse")
                        .IsFixedLength();

                    b.Property<int?>("GnmCourseCode")
                        .HasColumnType("int")
                        .HasColumnName("GNM_CourseCode");

                    b.ToTable("mCourses_GNM");
                });

            modelBuilder.Entity("Bt.Models.MCoursesMbb", b =>
                {
                    b.Property<int>("MbbsCourseCode")
                        .HasColumnType("int")
                        .HasColumnName("MBBS_CourseCode");

                    b.Property<string>("MbbsCouseName")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("MBBS_CouseName")
                        .IsFixedLength();

                    b.ToTable("mCourses_MBBS");
                });

            modelBuilder.Entity("Bt.Models.MDistrict", b =>
                {
                    b.Property<int>("DistrictCode")
                        .HasColumnType("int")
                        .HasColumnName("District_Code");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("District_Name");

                    b.Property<int>("StateCode")
                        .HasColumnType("int")
                        .HasColumnName("State_Code");

                    b.HasKey("DistrictCode")
                        .HasName("PK_mDistricts_1");

                    b.ToTable("mDistricts");
                });

            modelBuilder.Entity("Bt.Models.MGender", b =>
                {
                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("GenderDesc")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Gender_Desc")
                        .IsFixedLength();

                    b.HasKey("Gender");

                    b.ToTable("mGender");
                });

            modelBuilder.Entity("Bt.Models.MNationality", b =>
                {
                    b.Property<int?>("Nationality")
                        .HasColumnType("int");

                    b.Property<string>("NationalityName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Nationality_Name");

                    b.ToTable("mNationality");
                });

            modelBuilder.Entity("Bt.Models.MReligion", b =>
                {
                    b.Property<int>("Religion")
                        .HasColumnType("int");

                    b.Property<string>("ReligionDesc")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Religion_Desc")
                        .IsFixedLength();

                    b.HasKey("Religion");

                    b.ToTable("mReligion");
                });

            modelBuilder.Entity("Bt.Models.MScreeningCentre", b =>
                {
                    b.Property<int?>("ApplicationType")
                        .HasColumnType("int");

                    b.Property<int?>("ScreeningCentre")
                        .HasColumnType("int");

                    b.Property<string>("ScreeningCentreName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ScreeningCentre_Name");

                    b.ToTable("mScreeningCentre");
                });

            modelBuilder.Entity("Bt.Models.MState", b =>
                {
                    b.Property<int>("StateCode")
                        .HasColumnType("int")
                        .HasColumnName("State_Code");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("State_Name");

                    b.HasKey("StateCode");

                    b.ToTable("mStates");
                });

            modelBuilder.Entity("Bt.Models.MUser", b =>
                {
                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_Date");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_Login");

                    b.Property<string>("LastLoginIp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Last_LoginIP");

                    b.Property<int?>("LoginAttemps")
                        .HasColumnType("int")
                        .HasColumnName("Login_Attemps");

                    b.Property<string>("UserCategory")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .HasColumnName("User_Category")
                        .IsFixedLength();

                    b.Property<string>("UserDisplayName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("User_DisplayName");

                    b.Property<string>("UserEMail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_eMail");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.Property<string>("UserMobile")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("User_mobile")
                        .IsFixedLength();

                    b.Property<string>("UserPassword")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("User_Password");

                    b.ToTable("mUsers");
                });

            modelBuilder.Entity("Bt.Models.MVillage", b =>
                {
                    b.Property<int>("VillageCode")
                        .HasColumnType("int")
                        .HasColumnName("Village_Code");

                    b.Property<int>("BlockCode")
                        .HasColumnType("int")
                        .HasColumnName("Block_Code");

                    b.Property<int>("DistrictCode")
                        .HasColumnType("int")
                        .HasColumnName("District_Code");

                    b.Property<int>("StateCode")
                        .HasColumnType("int")
                        .HasColumnName("State_Code");

                    b.Property<string>("VillageName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Village_Name");

                    b.HasKey("VillageCode")
                        .HasName("PK_mVillages_1");

                    b.ToTable("mVillages");
                });

            modelBuilder.Entity("Bt.Models.PreferenceAlliedCourse", b =>
                {
                    b.Property<int?>("AcCourseCode")
                        .HasColumnType("int")
                        .HasColumnName("AC_CourseCode");

                    b.Property<int?>("ApplicantId")
                        .HasColumnType("int")
                        .HasColumnName("Applicant_Id");

                    b.Property<int?>("Preference")
                        .HasColumnType("int");

                    b.ToTable("preference_AlliedCourses");
                });

            modelBuilder.Entity("Bt.Models.PreferenceMbb", b =>
                {
                    b.Property<int?>("ApplicantId")
                        .HasColumnType("int")
                        .HasColumnName("Applicant_Id");

                    b.Property<int?>("MbbsCourseCode")
                        .HasColumnType("int")
                        .HasColumnName("MBBS_CourseCode");

                    b.Property<int?>("Preference")
                        .HasColumnType("int");

                    b.ToTable("preference_MBBS");
                });

            modelBuilder.Entity("Bt.Models.Session", b =>
                {
                    b.Property<string>("AcademicSession")
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .IsFixedLength();

                    b.Property<string>("AdvNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Advertisement")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("AdvtDate")
                        .HasColumnType("date");

                    b.Property<int?>("ApplicationType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAsOnforAgeCutOff")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastDateForApplication")
                        .HasColumnType("date");

                    b.Property<string>("SessionCode")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("Session_Code");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int")
                        .HasColumnName("State_Code");

                    b.ToTable("Session");
                });
#pragma warning restore 612, 618
        }
    }
}
